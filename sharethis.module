<?php
/**
 * @file
 * A module that adds one of the ShareThis widget to your website.
 */
use Drupal;
use Drupal\node\Entity\NodeType;
use Drupal\Core\Url;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function sharethis_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'sharethis.configuration_form':
      return '<p>' . t('Choose the widget, button family, and services for using <a href=":sharethis">ShareThis</a> to share content online.', array(':sharethis' => 'http://www.sharethis.com')) . '</p>';

    case 'help.page.sharethis':
      $return_value = '<p>' . t('This plugin places the ShareThis widget on each node.') . '</p>';
      $return_value .= '<ul><li>' . t('The Block pulls the URL from the current page and current Drupal title, the node version pulls it from the node title and url.') . '</li>';
      $return_value .= '<li>' . t('The block can be placed anywhere on a page, the node is limited to where nodes normally go') . '</li>';
      $return_value .= '<li>' . t('The block module is more likely to be compatible with other plugins that use blocks rather than nodes. (Panels works nicely with the block)') . '</li></ul>';
      $return_value .= '<p>' . t('For various configuration options please got to <a href=":sharethis">the settings page</a>.', array(':sharethis' => Url::fromRoute('sharethis.configuration_form'))) . '</p>';
      $return_value .= '<p>' . t('For more information, please visit <a href=":help">support.sharethis.com</a>.', array(':help' => 'http://support.sharethis.com/customer/portal/articles/446621-drupal-integration')) . '</p>';
      return $return_value;

  }
}

/**
 * Converts given value to boolean.
 *
 * @param val
 *   Which value to convert to boolean
 */
function to_boolean($val) {
  if (strtolower(trim($val)) === 'false') {
    return FALSE;
  }
  else {
    return (boolean) $val;
  }
}

/**
 * sharethisGetOptionArray is a helper function for DB access.
 *
 * Returns options that have been stored in the database.
 *
 * @TODO: Switch from this function to just straight variable_get() calls.
 */
function sharethis_get_options_array() {
  $default_sharethis_nodetypes = array("article" => "article", "page" => "page");
  $view_modes = array();
  foreach (array_keys(NodeType::loadMultiple()) as $type) {
    //$view_modes[$type] = Drupal::config('sharethis.settings')->get('sharethis_' . $type . '_options');
    $view_modes[$type] = array("article"=>"article", "page"=>"page");
  }

  return array(
    'buttons' => Drupal::config('sharethis.settings')->get('button_option', 'stbc_button'),
    'publisherID' => Drupal::config('sharethis.settings')->get('publisherID'),
    'services' => Drupal::config('sharethis.settings')->get('service_option'),
    'option_extras' => Drupal::config('sharethis.settings')->get('option_extras'),
    'widget' => Drupal::config('sharethis.settings')->get('widget_option'),
    'onhover' => Drupal::config('sharethis.settings')->get('option_onhover'),
    'neworzero' => Drupal::config('sharethis.settings')->get('option_neworzero'),
    'twitter_suffix' => Drupal::config('sharethis.settings')->get('twitter_suffix'),
    'twitter_handle' => Drupal::config('sharethis.settings')->get('twitter_handle'),
    'twitter_recommends' => Drupal::config('sharethis.settings')->get('twitter_recommends'),
    'late_load' => Drupal::config('sharethis.settings')->get('late_load'),
    'view_modes' => $view_modes,
    'sharethis_cns' => Drupal::config('sharethis.settings')->get('cns'),
    'sharethis_callesi' => (NULL == Drupal::config('sharethis.settings')->get('sharethis_cns'))?1:0,
    'node_types' => Drupal::config('sharethis.settings')->get('node_types'),
    'shorten' => Drupal::config('sharethis.settings')->get('option_shorten'),
  );
}
